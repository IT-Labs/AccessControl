ÿ
;c:\D\PROJECTS\AccessControl\API\Controllers\DeviceStatus.cs
	namespace		 	
API		
 
.		 
Controllers		 
{

 
[ 
ApiController 
] 
[ 
Route 

(
 
$str 
) 
] 
public 

class "
DeviceStatusController '
:( )
ControllerBase* 8
{ 
private 
readonly 
IGetDeviceStatus )
_getDeviceStatus* :
;: ;
public "
DeviceStatusController %
(% &
IGetDeviceStatus& 6
getDeviceStatus7 F
)F G
{ 	
_getDeviceStatus 
= 
getDeviceStatus .
;. /
} 	
[ 	
HttpGet	 
] 
public 
async 
Task 
< 
string  
>  !
Get" %
(% &
)& '
{ 	
byte 
[ 
] 
response 
= 
await #
_getDeviceStatus$ 4
.4 5
Execute5 <
(< =
)= >
;> ?
StringBuilder 
sb 
= 
new "
StringBuilder# 0
(0 1
)1 2
;2 3
for 
( 
int 
i 
= 
$num 
; 
i 
< 
response '
.' (
Length( .
;. /
i0 1
++1 3
)3 4
{ 
sb 
. 

AppendLine 
( 
string $
.$ %
Format% +
(+ ,
$str   9
,  9 :
(!! 
i!! 
.!! 
ToString!! 
(!!  
)!!  !
.!!! "
Length!!" (
>!!) *
$num!!+ ,
)!!, -
?!!. /
i!!0 1
.!!1 2
ToString!!2 :
(!!: ;
)!!; <
:!!= >
$str!!? B
+!!C D
i!!E F
.!!F G
ToString!!G O
(!!O P
)!!P Q
,!!Q R
response"" 
["" 
i"" 
]"" 
.""  
ToString""  (
(""( )
$str"") -
)""- .
,"". /
Convert## 
.## 
ToInt32## #
(### $
response##$ ,
[##, -
i##- .
]##. /
)##/ 0
)$$ 
)$$ 
;$$ 
}%% 
return'' 
sb'' 
.'' 
ToString'' 
('' 
)''  
;''  !
}(( 	
})) 
}** ‡
<c:\D\PROJECTS\AccessControl\API\Controllers\RealTimeClock.cs
	namespace 	
API
 
. 
Controllers 
{		 
[

 
ApiController

 
]

 
[ 
Route 

(
 
$str 
) 
] 
public 

class #
RealTimeClockController (
:) *
ControllerBase+ 9
{ 
private 
readonly 
IGetRealTimeClock *
_getRealTimeClock+ <
;< =
public #
RealTimeClockController &
(& '
IGetRealTimeClock' 8
getRealTimeClock9 I
)I J
{ 	
_getRealTimeClock 
= 
getRealTimeClock  0
;0 1
} 	
[ 	
HttpGet	 
] 
public 
async 
Task 
< 
string  
>  !
Get" %
(% &
)& '
{ 	
DateTime 
rtc 
= 
await  
_getRealTimeClock! 2
.2 3
Execute3 :
(: ;
); <
;< =
return 
rtc 
. 
ToString 
(  
$str  5
)5 6
;6 7
} 	
} 
} Ã

7c:\D\PROJECTS\AccessControl\API\Controllers\UserData.cs
	namespace 	
API
 
. 
Controllers 
{ 
[		 
ApiController		 
]		 
[

 
Route

 

(


 
$str

 
)

 
]

 
public 

class 
UserDataController #
:$ %
ControllerBase& 4
{ 
private 
readonly 
IGetUserData %
_getUserData& 2
;2 3
public 
UserDataController !
(! "
IGetUserData" .
getUserData/ :
): ;
{ 	
_getUserData 
= 
getUserData &
;& '
} 	
[ 	
HttpGet	 
] 
public 
async 
Task 
< 
string  
>  !
Get" %
(% &
[& '
	FromQuery' 0
]0 1
int2 5
[5 6
,6 7
]7 8
cards9 >
)> ?
{ 	
return 
await 
_getUserData %
.% &
Execute& -
(- .
cards. 3
)3 4
;4 5
} 	
} 
} û	
*c:\D\PROJECTS\AccessControl\API\Program.cs
	namespace 	
API
 
{ 
public 

class 
Program 
{ 
public 
static 
void 
Main 
(  
string  &
[& '
]' (
args) -
)- .
{		 	
CreateHostBuilder

 
(

 
args

 "
)

" #
.

# $
Build

$ )
(

) *
)

* +
.

+ ,
Run

, /
(

/ 0
)

0 1
;

1 2
} 	
public 
static 
IHostBuilder "
CreateHostBuilder# 4
(4 5
string5 ;
[; <
]< =
args> B
)B C
=>D F
Host 
.  
CreateDefaultBuilder %
(% &
args& *
)* +
. $
ConfigureWebHostDefaults )
() *

webBuilder* 4
=>5 7
{ 

webBuilder 
. 

UseStartup )
<) *
Startup* 1
>1 2
(2 3
)3 4
;4 5
} 
) 
; 
} 
} è
*c:\D\PROJECTS\AccessControl\API\Startup.cs
	namespace 	
API
 
{ 
public 

class 
Startup 
{ 
public 
Startup 
( 
IConfiguration %
configuration& 3
)3 4
{ 	
Configuration 
= 
configuration )
;) *
} 	
public 
IConfiguration 
Configuration +
{, -
get. 1
;1 2
}3 4
public 
void 
ConfigureServices %
(% &
IServiceCollection& 8
services9 A
)A B
{ 	
services 
. 
AddControllers #
(# $
)$ %
;% &
services 
. 
AddSingleton !
<! " 
IHttpContextAccessor" 6
,6 7
HttpContextAccessor8 K
>K L
(L M
)M N
;N O
services!! 
.!! 
	AddScoped!! 
<!! 
IControllerAddress!! 1
,!!1 2
ControllerAddress!!3 D
>!!D E
(!!E F
)!!F G
;!!G H
services"" 
."" 
	AddScoped"" 
<"" ,
 IControllerIdentificationService"" ?
,""? @+
ControllerIdentificationService""A `
>""` a
(""a b
)""b c
;""c d
services$$ 
.$$ 
	AddScoped$$ 
<$$ 
IAsyncClient$$ +
,$$+ ,
AsyncClient$$- 8
>$$8 9
($$9 :
)$$: ;
;$$; <
services&& 
.&& 
	AddScoped&& 
<&& 
IGetRealTimeClock&& 0
,&&0 1
GetRealTimeClock&&2 B
>&&B C
(&&C D
)&&D E
;&&E F
services'' 
.'' 
	AddScoped'' 
<'' 
IGetDeviceStatus'' /
,''/ 0
GetDeviceStatus''1 @
>''@ A
(''A B
)''B C
;''C D
services(( 
.(( 
	AddScoped(( 
<(( 
IGetUserData(( +
,((+ ,
GetUserData((- 8
>((8 9
(((9 :
)((: ;
;((; <
}** 	
public-- 
void-- 
	Configure-- 
(-- 
IApplicationBuilder-- 1
app--2 5
,--5 6
IWebHostEnvironment--7 J
env--K N
,--N O
IControllerAddress--P b
controllerAddress--c t
)--t u
{.. 	
if// 
(// 
env// 
.// 
IsDevelopment// !
(//! "
)//" #
)//# $
{00 
app11 
.11 %
UseDeveloperExceptionPage11 -
(11- .
)11. /
;11/ 0
}22 
app44 
.44 
UseHttpsRedirection44 #
(44# $
)44$ %
;44% &
app66 
.66 

UseRouting66 
(66 
)66 
;66 
app88 
.88 
UseAuthorization88  
(88  !
)88! "
;88" #
app:: 
.:: 
UseEndpoints:: 
(:: 
	endpoints:: &
=>::' )
{;; 
	endpoints<< 
.<< 
MapControllers<< (
(<<( )
)<<) *
;<<* +
}== 
)== 
;== 
}>> 	
}?? 
}@@ 