ƒ
;c:\D\PROJECTS\AccessControl\API\Controllers\DeviceStatus.cs
	namespace		 	
API		
 
.		 
Controllers		 
{

 
[ 
ApiController 
] 
[ 
Route 

(
 
$str 
) 
] 
public 

class "
DeviceStatusController '
:( )
ControllerBase* 8
{ 
private 
readonly 
IControllerAddress +
_controllerAddress, >
;> ?
private 
readonly 
IGetDeviceStatus )
_getDeviceStatus* :
;: ;
private 
readonly 
ILogger  
<  !
UserDataController! 3
>3 4
_logger5 <
;< =
public "
DeviceStatusController %
(% &
IControllerAddress 
controllerAddress 0
,0 1
IGetDeviceStatus 
getDeviceStatus ,
,, -
ILogger 
< 
UserDataController &
>& '
logger( .
) 	
{ 	
_controllerAddress 
=  
controllerAddress! 2
;2 3
_getDeviceStatus 
= 
getDeviceStatus .
;. /
_logger 
= 
logger 
; 
} 	
[ 	
HttpGet	 
] 
public 
async 
Task 
< 
string  
>  !
Get" %
(% &
)& '
{   	
byte!! 
[!! 
]!! 
response!! 
=!! 
await!! #
_getDeviceStatus!!$ 4
.!!4 5
Execute!!5 <
(!!< =
)!!= >
;!!> ?
StringBuilder## 
sb## 
=## 
new## "
StringBuilder### 0
(##0 1
)##1 2
;##2 3
for%% 
(%% 
int%% 
i%% 
=%% 
$num%% 
;%% 
i%% 
<%% 
response%% '
.%%' (
Length%%( .
;%%. /
i%%0 1
++%%1 3
)%%3 4
{&& 
sb'' 
.'' 

AppendLine'' 
('' 
string'' $
.''$ %
Format''% +
(''+ ,
$str(( 9
,((9 :
()) 
i)) 
.)) 
ToString)) 
())  
)))  !
.))! "
Length))" (
>))) *
$num))+ ,
))), -
?)). /
i))0 1
.))1 2
ToString))2 :
()): ;
))); <
:))= >
$str))? B
+))C D
i))E F
.))F G
ToString))G O
())O P
)))P Q
,))Q R
response** 
[** 
i** 
]** 
.**  
ToString**  (
(**( )
$str**) -
)**- .
,**. /
Convert++ 
.++ 
ToInt32++ #
(++# $
response++$ ,
[++, -
i++- .
]++. /
)++/ 0
),, 
),, 
;,, 
}-- 
return// 
sb// 
.// 
ToString// 
(// 
)//  
;//  !
}00 	
}11 
}22 ‹
<c:\D\PROJECTS\AccessControl\API\Controllers\RealTimeClock.cs
	namespace 	
API
 
. 
Controllers 
{		 
[

 
ApiController

 
]

 
[ 
Route 

(
 
$str 
) 
] 
public 

class #
RealTimeClockController (
:) *
ControllerBase+ 9
{ 
private 
readonly 
IControllerAddress +
_controllerAddress, >
;> ?
private 
readonly 
IGetRealTimeClock *
_getRealTimeClock+ <
;< =
private 
readonly 
ILogger  
<  !
UserDataController! 3
>3 4
_logger5 <
;< =
public #
RealTimeClockController &
(& '
IControllerAddress 
controllerAddress 0
,0 1
IGetRealTimeClock 
getRealTimeClock .
,. /
ILogger 
< 
UserDataController &
>& '
logger( .
) 	
{ 	
_controllerAddress 
=  
controllerAddress! 2
;2 3
_getRealTimeClock 
= 
getRealTimeClock  0
;0 1
_logger 
= 
logger 
; 
} 	
[ 	
HttpGet	 
] 
public 
async 
Task 
< 
string  
>  !
Get" %
(% &
)& '
{ 	
DateTime   
rtc   
=   
await    
_getRealTimeClock  ! 2
.  2 3
Execute  3 :
(  : ;
)  ; <
;  < =
return!! 
rtc!! 
.!! 
ToString!! 
(!!  
$str!!  5
)!!5 6
;!!6 7
}"" 	
}## 
}$$ ®
7c:\D\PROJECTS\AccessControl\API\Controllers\UserData.cs
	namespace 	
API
 
. 
Controllers 
{ 
[		 
ApiController		 
]		 
[

 
Route

 

(


 
$str

 
)

 
]

 
public 

class 
UserDataController #
:$ %
ControllerBase& 4
{ 
private 
readonly 
IControllerAddress +
_controllerAddress, >
;> ?
private 
readonly 
IGetUserData %
_getUserData& 2
;2 3
private 
readonly 
ILogger  
<  !
UserDataController! 3
>3 4
_logger5 <
;< =
public 
UserDataController !
(! "
IControllerAddress 
controllerAddress 0
,0 1
IGetUserData 
getUserData $
,$ %
ILogger 
< 
UserDataController &
>& '
logger( .
) 
{ 	
_controllerAddress 
=  
controllerAddress! 2
;2 3
_getUserData 
= 
getUserData &
;& '
_logger 
= 
logger 
; 
} 	
[ 	
HttpGet	 
] 
public 
async 
Task 
< 
string  
>  !
Get" %
(% &
)& '
{ 	
int 
[ 
, 
] 
cards 
= 
new 
int "
[" #
,# $
]$ %
{% &
{ 
$num 
, 
$num 
} 
, 
{   
$num   
,   
$num   
}   
,   
{!! 
$num!! 
,!! 
$num!! 
}!! 
}"" 
;"" 
return$$ 
await$$ 
_getUserData$$ %
.$$% &
Execute$$& -
($$- .
cards$$. 3
)$$3 4
;$$4 5
}%% 	
}&& 
}'' û	
*c:\D\PROJECTS\AccessControl\API\Program.cs
	namespace

 	
API


 
{ 
public 

class 
Program 
{ 
public 
static 
void 
Main 
(  
string  &
[& '
]' (
args) -
)- .
{ 	
CreateHostBuilder 
( 
args "
)" #
.# $
Build$ )
() *
)* +
.+ ,
Run, /
(/ 0
)0 1
;1 2
} 	
public 
static 
IHostBuilder "
CreateHostBuilder# 4
(4 5
string5 ;
[; <
]< =
args> B
)B C
=>D F
Host 
.  
CreateDefaultBuilder %
(% &
args& *
)* +
. $
ConfigureWebHostDefaults )
() *

webBuilder* 4
=>5 7
{ 

webBuilder 
. 

UseStartup )
<) *
Startup* 1
>1 2
(2 3
)3 4
;4 5
} 
) 
; 
} 
} „
*c:\D\PROJECTS\AccessControl\API\Startup.cs
	namespace 	
API
 
{ 
public 

class 
Startup 
{ 
public 
Startup 
( 
IConfiguration %
configuration& 3
)3 4
{ 	
Configuration 
= 
configuration )
;) *
} 	
public 
IConfiguration 
Configuration +
{, -
get. 1
;1 2
}3 4
public 
void 
ConfigureServices %
(% &
IServiceCollection& 8
services9 A
)A B
{ 	
services 
. 
AddControllers #
(# $
)$ %
;% &
services 
. 
	AddScoped 
< 
IControllerAddress 1
,1 2
ControllerAddress3 D
>D E
(E F
)F G
;G H
services   
.   
	AddScoped   
<   
IGetRealTimeClock   0
,  0 1
GetRealTimeClock  2 B
>  B C
(  C D
)  D E
;  E F
services!! 
.!! 
	AddScoped!! 
<!! 
IGetDeviceStatus!! /
,!!/ 0
GetDeviceStatus!!1 @
>!!@ A
(!!A B
)!!B C
;!!C D
services"" 
."" 
	AddScoped"" 
<"" 
IGetUserData"" +
,""+ ,
GetUserData""- 8
>""8 9
(""9 :
)"": ;
;""; <
}## 	
public&& 
void&& 
	Configure&& 
(&& 
IApplicationBuilder&& 1
app&&2 5
,&&5 6
IWebHostEnvironment&&7 J
env&&K N
)&&N O
{'' 	
if(( 
((( 
env(( 
.(( 
IsDevelopment(( !
(((! "
)((" #
)((# $
{)) 
app** 
.** %
UseDeveloperExceptionPage** -
(**- .
)**. /
;**/ 0
}++ 
app-- 
.-- 
UseHttpsRedirection-- #
(--# $
)--$ %
;--% &
app// 
.// 

UseRouting// 
(// 
)// 
;// 
app11 
.11 
UseAuthorization11  
(11  !
)11! "
;11" #
app33 
.33 
UseEndpoints33 
(33 
	endpoints33 &
=>33' )
{44 
	endpoints55 
.55 
MapControllers55 (
(55( )
)55) *
;55* +
}66 
)66 
;66 
}77 	
}88 
}99 