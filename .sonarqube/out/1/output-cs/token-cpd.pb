¹*
4c:\D\PROJECTS\AccessControl\SoyalControllers\Base.cs
	namespace 	
SoyalControllers
 
{		 
public

 

abstract

 
class

 
Base

 
{ 
	protected 
readonly 
IControllerAddress -
_controllerAddress. @
;@ A
	protected 
readonly 
IAsyncClient '
_asyncClient( 4
;4 5
	protected 
Base 
( ,
 IControllerIdentificationService 8+
controllerIdentificationService9 X
,X Y
IAsyncClientZ f
asyncClientg r
)r s
{ 	
_controllerAddress 
=  +
controllerIdentificationService! @
.@ A 
GetControllerAddressA U
(U V
)V W
.W X

GetAwaiterX b
(b c
)c d
.d e
	GetResulte n
(n o
)o p
;p q
_asyncClient 
= 
asyncClient &
;& '
} 	
internal 
byte 
[ 
] 
CalculateXORandSUM *
(* +
byte+ /
[/ 0
]0 1
input2 7
)7 8
{ 	
byte 
zero 
= 
Byte 
. 
Parse "
(" #
$str# '
,' (
NumberStyles) 5
.5 6
	HexNumber6 ?
)? @
;@ A
byte!! 
xor!! 
=!! 
(!! 
byte!! 
)!! 
(!! 
zero!! "
^!!# $
input!!% *
[!!* +
$num!!+ ,
]!!, -
)!!- .
;!!. /
byte"" 
sum"" 
="" 
input"" 
["" 
$num"" 
]"" 
;""  
for%% 
(%% 
int%% 
i%% 
=%% 
$num%% 
;%% 
i%% 
<%% 
input%% $
.%%$ %
Length%%% +
-%%, -
$num%%. /
;%%/ 0
i%%1 2
++%%2 4
)%%4 5
{&& 
xor'' 
^='' 
input'' 
['' 
i'' 
]'' 
;''  
sum(( 
+=(( 
input(( 
[(( 
i(( 
](( 
;((  
})) 
sum++ 
+=++ 
xor++ 
;++ 
return-- 
new-- 
byte-- 
[-- 
]-- 
{-- 
xor-- !
,--! "
sum--# &
}--& '
;--' (
}.. 	
internal66 
bool66 
IsValidResponse66 %
(66% &
byte66& *
[66* +
]66+ ,
response66- 5
)665 6
{77 	
byte<< 
[<< 
]<< 
calculatedXORandSUM<< &
=<<' (
CalculateXORandSUM<<) ;
(<<; <
response<<< D
)<<D E
;<<E F
return?? 
(?? 
response@@ 
[@@ 
response@@ !
.@@! "
Length@@" (
-@@) *
$num@@+ ,
]@@, -
==@@. 0
calculatedXORandSUM@@1 D
[@@D E
$num@@E F
]@@F G
&&@@H J
responseAA 
[AA 
responseAA !
.AA! "
LengthAA" (
-AA) *
$numAA+ ,
]AA, -
==AA. 0
calculatedXORandSUMAA1 D
[AAD E
$numAAE F
]AAF G
)BB 
;BB 
}CC 	
internalLL 
stringLL 
ConvertToStringLL '
(LL' (
byteLL( ,
[LL, -
]LL- .
bytesLL/ 4
)LL4 5
{MM 	
StringBuilderNN 
sbNN 
=NN 
newNN "
StringBuilderNN# 0
(NN0 1
)NN1 2
;NN2 3
forOO 
(OO 
intOO 
iOO 
=OO 
$numOO 
;OO 
iOO 
<OO 
bytesOO  %
.OO% &
LengthOO& ,
;OO, -
iOO. /
++OO/ 1
)OO1 2
{PP 
sbQQ 
.QQ 

AppendLineQQ 
(QQ 
stringQQ $
.QQ$ %
FormatQQ% +
(QQ+ ,
$strRR 9
,RR9 :
(SS 
iSS 
.SS 
ToStringSS 
(SS  
)SS  !
.SS! "
LengthSS" (
>SS) *
$numSS+ ,
)SS, -
?SS. /
iSS0 1
.SS1 2
ToStringSS2 :
(SS: ;
)SS; <
:SS= >
$strSS? B
+SSC D
iSSE F
.SSF G
ToStringSSG O
(SSO P
)SSP Q
,SSQ R
bytesTT 
[TT 
iTT 
]TT 
.TT 
ToStringTT %
(TT% &
$strTT& *
)TT* +
,TT+ ,
ConvertUU 
.UU 
ToInt32UU #
(UU# $
bytesUU$ )
[UU) *
iUU* +
]UU+ ,
)UU, -
)VV 
)VV 
;VV 
}WW 
returnYY 
sbYY 
.YY 
ToStringYY 
(YY 
)YY  
;YY  !
}ZZ 	
}[[ 
}\\ â	
Ac:\D\PROJECTS\AccessControl\SoyalControllers\ControllerAddress.cs
	namespace 	
SoyalControllers
 
{ 
public 

	interface 
IControllerAddress '
{ 
string 
	IpAddress 
{ 
get 
; 
set "
;" #
}# $
int 
Port 
{ 
get 
; 
set 
; 
} 
int 
NodeId 
{ 
get 
; 
set 
; 
} 
} 
public

 

class

 
ControllerAddress

 "
:

# $
IControllerAddress

% 7
{ 
public 
string 
	IpAddress 
{  !
get! $
;$ %
set& )
;) *
}* +
public 
int 
Port 
{ 
get 
; 
set !
;! "
}" #
public 
int 
NodeId 
{ 
get 
;  
set! $
;$ %
}% &
} 
} É#
tc:\D\PROJECTS\AccessControl\SoyalControllers\ControllerIdentification\RequestHostControllerIdentificationStrategy.cs
	namespace 	
SoyalControllers
 
. $
ControllerIdentification 3
{ 
public

 

	interface

 ,
 IControllerIdentificationService

 5
{ 
Task 
< 
IControllerAddress 
>   
GetControllerAddress! 5
(5 6
)6 7
;7 8
} 
public 

class +
ControllerIdentificationService 0
:1 2,
 IControllerIdentificationService3 S
{ 
private 
readonly  
IHttpContextAccessor - 
_httpContextAccessor. B
;B C
private 
readonly 
IControllerAddress +
_controllerAddress, >
;> ?
public +
ControllerIdentificationService .
(. / 
IHttpContextAccessor/ C
httpContextAccessorD W
,W X
IControllerAddressY k
controllerAddressl }
)} ~
{ 	 
_httpContextAccessor  
=! "
httpContextAccessor# 6
;6 7
_controllerAddress 
=  
controllerAddress! 2
;2 3
} 	
public 
async 
Task 
< 
IControllerAddress ,
>, - 
GetControllerAddress. B
(B C
)C D
{ 	
if   
(    
_httpContextAccessor   #
.  # $
HttpContext  $ /
.  / 0
Request  0 7
==  8 :
null  ; ?
)  ? @
{!! 
throw"" 
new"" 
	Exception"" #
(""# $
$str""$ ?
)""? @
;""@ A
}## 
if%% 
(%%  
_httpContextAccessor%% #
.%%# $
HttpContext%%$ /
.%%/ 0
Request%%0 7
.%%7 8
Headers%%8 ?
[%%? @
$str%%@ K
]%%K L
.%%L M
Count%%M R
!=%%S U
$num%%V W
)%%W X
{&& 
throw'' 
new'' 
	Exception'' #
(''# $
$str''$ T
)''T U
;''U V
}(( 
if** 
(**  
_httpContextAccessor** #
.**# $
HttpContext**$ /
.**/ 0
Request**0 7
.**7 8
Headers**8 ?
[**? @
$str**@ F
]**F G
.**G H
Count**H M
!=**N P
$num**Q R
)**R S
{++ 
throw,, 
new,, 
	Exception,, #
(,,# $
$str,,$ O
),,O P
;,,P Q
}-- 
if// 
(//  
_httpContextAccessor// #
.//# $
HttpContext//$ /
./// 0
Request//0 7
.//7 8
Headers//8 ?
[//? @
$str//@ H
]//H I
.//I J
Count//J O
!=//P R
$num//S T
)//T U
{00 
throw11 
new11 
	Exception11 #
(11# $
$str11$ Q
)11Q R
;11R S
}22 
_controllerAddress44 
.44 
	IpAddress44 (
=44) * 
_httpContextAccessor44+ ?
.44? @
HttpContext44@ K
.44K L
Request44L S
.44S T
Headers44T [
[44[ \
$str44\ g
]44g h
;44h i
_controllerAddress55 
.55 
Port55 #
=55$ %
int55& )
.55) *
Parse55* /
(55/ 0 
_httpContextAccessor550 D
.55D E
HttpContext55E P
.55P Q
Request55Q X
.55X Y
Headers55Y `
[55` a
$str55a g
]55g h
)55h i
;55i j
_controllerAddress66 
.66 
NodeId66 %
=66& '
int66( +
.66+ ,
Parse66, 1
(661 2 
_httpContextAccessor662 F
.66F G
HttpContext66G R
.66R S
Request66S Z
.66Z [
Headers66[ b
[66b c
$str66c k
]66k l
)66l m
;66m n
return88 
await88 
Task88 
.88 

FromResult88 (
(88( )
_controllerAddress88) ;
)88; <
;88< =
}99 	
}:: 
};; "
?c:\D\PROJECTS\AccessControl\SoyalControllers\GetDeviceStatus.cs
	namespace 	
SoyalControllers
 
{		 
public

 

	interface

 
IGetDeviceStatus

 %
{ 
Task 
< 
byte 
[ 
] 
> 
Execute 
( 
) 
; 
} 
public 

class 
GetDeviceStatus  
:! "
Base# '
,' (
IGetDeviceStatus) 9
{ 
private 
readonly 
byte 
_head #
=$ %
Byte& *
.* +
Parse+ 0
(0 1
$str1 5
,5 6
NumberStyles7 C
.C D
	HexNumberD M
)M N
;N O
private 
readonly 
byte 
_cmd "
=# $
Byte% )
.) *
Parse* /
(/ 0
$str0 4
,4 5
NumberStyles6 B
.B C
	HexNumberC L
)L M
;M N
public 
GetDeviceStatus 
( ,
 IControllerIdentificationService ?+
controllerIdentificationService@ _
,_ `
IAsyncClienta m
asyncClientn y
)y z
: 	
base
 
( +
controllerIdentificationService /
,/ 0
asyncClient1 <
)< =
{ 	
} 	
public   
async   
Task   
<   
byte   
[   
]    
>    !
Execute  " )
(  ) *
)  * +
{!! 	
byte"" 
["" 
]"" 
msg"" 
="" 
new"" 
byte"" !
[""! "
$num""" #
]""# $
;""$ %
msg$$ 
[$$ 
$num$$ 
]$$ 
=$$ 
_head$$ 
;$$ 
msg%% 
[%% 
$num%% 
]%% 
=%% 
Convert%% 
.%% 
ToByte%% #
(%%# $
msg%%$ '
.%%' (
Length%%( .
-%%/ 0
$num%%1 2
)%%2 3
;%%3 4
msg&& 
[&& 
$num&& 
]&& 
=&& 
Convert&& 
.&& 
ToByte&& #
(&&# $
base&&$ (
.&&( )
_controllerAddress&&) ;
.&&; <
NodeId&&< B
)&&B C
;&&C D
msg'' 
['' 
$num'' 
]'' 
='' 
_cmd'' 
;'' 
byte)) 
[)) 
])) 
	XORandSUM)) 
=)) 
base)) #
.))# $
CalculateXORandSUM))$ 6
())6 7
msg))7 :
))): ;
;)); <
msg++ 
[++ 
msg++ 
.++ 
Length++ 
-++ 
$num++ 
]++ 
=++  !
	XORandSUM++" +
[+++ ,
$num++, -
]++- .
;++. /
msg,, 
[,, 
msg,, 
.,, 
Length,, 
-,, 
$num,, 
],, 
=,,  !
	XORandSUM,," +
[,,+ ,
$num,,, -
],,- .
;,,. /
byte.. 
[.. 
].. 
response.. 
=.. 
await.. #
base..$ (
...( )
_asyncClient..) 5
...5 6
StartClient..6 A
(..A B
base..B F
...F G
_controllerAddress..G Y
...Y Z
	IpAddress..Z c
,..c d
base..e i
...i j
_controllerAddress..j |
...| }
Port	..} 
,
.. 
msg
.. 
)
.. 
.
.. 
ConfigureAwait
.. 
(
.. 
false
.. 
)
.. 
;
.. 
if00 
(00 
!00 
IsValidResponse00 
(00  
response00  (
)00( )
)00) *
{11 
throw22 
new22 
	Exception22 #
(22# $
$str22$ K
)22K L
;22L M
}33 
return66 
response66 
;66 
}77 	
}88 
}99 ³6
@c:\D\PROJECTS\AccessControl\SoyalControllers\GetRealTimeClock.cs
	namespace 	
SoyalControllers
 
{		 
public

 

	interface

 
IGetRealTimeClock

 &
{ 
Task 
< 
DateTime 
> 
Execute 
( 
)  
;  !
} 
public 

class 
GetRealTimeClock !
:" #
Base$ (
,( )
IGetRealTimeClock* ;
{ 
private 
readonly 
byte 
_head #
=$ %
Byte& *
.* +
Parse+ 0
(0 1
$str1 5
,5 6
NumberStyles7 C
.C D
	HexNumberD M
)M N
;N O
private 
readonly 
byte 
_cmd "
=# $
Byte% )
.) *
Parse* /
(/ 0
$str0 4
,4 5
NumberStyles6 B
.B C
	HexNumberC L
)L M
;M N
public 
GetRealTimeClock 
(  ,
 IControllerIdentificationService  @+
controllerIdentificationServiceA `
,` a
IAsyncClientb n
asyncCliento z
)z {
: 	
base
 
( +
controllerIdentificationService /
,/ 0
asyncClient1 <
)< =
{ 	
} 	
public 
async 
Task 
< 
DateTime "
>" #
Execute$ +
(+ ,
), -
{   	
byte!! 
[!! 
]!! 
msg!! 
=!! 
new!! 
byte!! !
[!!! "
$num!!" #
]!!# $
;!!$ %
msg## 
[## 
$num## 
]## 
=## 
_head## 
;## 
msg$$ 
[$$ 
$num$$ 
]$$ 
=$$ 
Convert$$ 
.$$ 
ToByte$$ #
($$# $
msg$$$ '
.$$' (
Length$$( .
-$$/ 0
$num$$1 2
)$$2 3
;$$3 4
msg%% 
[%% 
$num%% 
]%% 
=%% 
Convert%% 
.%% 
ToByte%% #
(%%# $
base%%$ (
.%%( )
_controllerAddress%%) ;
.%%; <
NodeId%%< B
)%%B C
;%%C D
msg&& 
[&& 
$num&& 
]&& 
=&& 
_cmd&& 
;&& 
byte(( 
[(( 
](( 
	XORandSUM(( 
=(( 
base(( #
.((# $
CalculateXORandSUM(($ 6
(((6 7
msg((7 :
)((: ;
;((; <
msg** 
[** 
msg** 
.** 
Length** 
-** 
$num** 
]** 
=**  !
	XORandSUM**" +
[**+ ,
$num**, -
]**- .
;**. /
msg++ 
[++ 
msg++ 
.++ 
Length++ 
-++ 
$num++ 
]++ 
=++  !
	XORandSUM++" +
[+++ ,
$num++, -
]++- .
;++. /
byte-- 
[-- 
]-- 
response-- 
=-- 
await-- #
base--$ (
.--( )
_asyncClient--) 5
.--5 6
StartClient--6 A
(--A B
base--B F
.--F G
_controllerAddress--G Y
.--Y Z
	IpAddress--Z c
,--c d
base--e i
.--i j
_controllerAddress--j |
.--| }
Port	--} 
,
-- 
msg
-- 
)
-- 
.
-- 
ConfigureAwait
-- 
(
-- 
false
-- 
)
-- 
;
-- 
if// 
(// 
!// 
IsValidResponse// 
(//  
response//  (
)//( )
)//) *
{00 
throw11 
new11 
	Exception11 #
(11# $
$str11$ K
)11K L
;11L M
}22 
System44 
.44 
Text44 
.44 
StringBuilder44 %
sb44& (
=44) *
new44+ .
System44/ 5
.445 6
Text446 :
.44: ;
StringBuilder44; H
(44H I
)44I J
;44J K
for66 
(66 
int66 
i66 
=66 
$num66 
;66 
i66 
<66 
response66 '
.66' (
Length66( .
;66. /
i660 1
++661 3
)663 4
{77 
sb88 
.88 

AppendLine88 
(88 
string88 $
.88$ %
Format88% +
(88+ ,
$str99 9
,999 :
(:: 
i:: 
.:: 
ToString:: 
(::  
)::  !
.::! "
Length::" (
>::) *
$num::+ ,
)::, -
?::. /
i::0 1
.::1 2
ToString::2 :
(::: ;
)::; <
:::= >
$str::? B
+::C D
i::E F
.::F G
ToString::G O
(::O P
)::P Q
,::Q R
response;; 
[;; 
i;; 
];; 
.;;  
ToString;;  (
(;;( )
$str;;) -
);;- .
,;;. /
Convert<< 
.<< 
ToInt32<< #
(<<# $
response<<$ ,
[<<, -
i<<- .
]<<. /
)<</ 0
)== 
)== 
;== 
}>> 
returnAA 
newAA 
DateTimeAA 
(AA  
ConvertBB 
.BB 
ToInt32BB 
(BB  
responseBB  (
[BB( )
$numBB) +
]BB+ ,
+BB- .
$numBB/ 3
)BB3 4
,BB4 5
ConvertDD 
.DD 
ToInt32DD 
(DD  
responseDD  (
[DD( )
$numDD) +
]DD+ ,
)DD, -
,DD- .
ConvertEE 
.EE 
ToInt32EE 
(EE  
responseEE  (
[EE( )
$numEE) *
]EE* +
)EE+ ,
,EE, -
ConvertFF 
.FF 
ToInt32FF 
(FF  
responseFF  (
[FF( )
$numFF) *
]FF* +
)FF+ ,
,FF, -
ConvertGG 
.GG 
ToInt32GG 
(GG  
responseGG  (
[GG( )
$numGG) *
]GG* +
)GG+ ,
,GG, -
ConvertHH 
.HH 
ToInt32HH 
(HH  
responseHH  (
[HH( )
$numHH) *
]HH* +
)HH+ ,
)II 
;II 
}JJ 	
}KK 
}LL F
;c:\D\PROJECTS\AccessControl\SoyalControllers\GetUserData.cs
	namespace		 	
SoyalControllers		
 
{

 
public 

	interface 
IGetUserData !
{ 
Task 
< 
string 
> 
Execute 
( 
int  
[  !
,! "
]" #
cards$ )
)) *
;* +
} 
public 

class 
GetUserData 
: 
Base #
,# $
IGetUserData% 1
{ 
private 
readonly 
byte 
_head #
=$ %
Byte& *
.* +
Parse+ 0
(0 1
$str1 5
,5 6
NumberStyles7 C
.C D
	HexNumberD M
)M N
;N O
private 
readonly 
byte 
_cmd "
=# $
Byte% )
.) *
Parse* /
(/ 0
$str0 4
,4 5
NumberStyles6 B
.B C
	HexNumberC L
)L M
;M N
public 
GetUserData 
( ,
 IControllerIdentificationService ;+
controllerIdentificationService< [
,[ \
IAsyncClient] i
asyncClientj u
)u v
: 	
base
 
( +
controllerIdentificationService /
,/ 0
asyncClient1 <
)< =
{ 	
} 	
public"" 
async"" 
Task"" 
<"" 
string""  
>""  !
Execute""" )
("") *
int""* -
[""- .
,"". /
]""/ 0
cards""1 6
)""6 7
{## 	
byte$$ 
[$$ 
]$$ 
msg$$ 
=$$ 
new$$ 
byte$$ !
[$$! "
$num$$" #
+$$$ %
cards$$& +
.$$+ ,
Length$$, 2
*$$3 4
$num$$5 6
]$$6 7
;$$7 8
msg&& 
[&& 
$num&& 
]&& 
=&& 
_head&& 
;&& 
msg'' 
['' 
$num'' 
]'' 
='' 
Convert'' 
.'' 
ToByte'' #
(''# $
msg''$ '
.''' (
Length''( .
-''/ 0
$num''1 2
)''2 3
;''3 4
msg(( 
[(( 
$num(( 
](( 
=(( 
Convert(( 
.(( 
ToByte(( #
(((# $
base(($ (
.((( )
_controllerAddress(() ;
.((; <
NodeId((< B
)((B C
;((C D
msg)) 
[)) 
$num)) 
])) 
=)) 
_cmd)) 
;)) 
for++ 
(++ 
int++ 
i++ 
=++ 
$num++ 
;++ 
i++ 
<++ 
cards++ $
.++$ %
Length++% +
/++, -
$num++. /
;++/ 0
i++1 2
++++2 4
)++4 5
{,, 
byte-- 
[-- 
]-- 
cardBytesLow-- #
=--$ %
BitConverter--& 2
.--2 3
GetBytes--3 ;
(--; <
cards--< A
[--A B
i--B C
,--C D
$num--D E
]--E F
)--F G
;--G H
byte.. 
[.. 
].. 
cardBytesHigh.. $
=..% &
BitConverter..' 3
...3 4
GetBytes..4 <
(..< =
cards..= B
[..B C
i..C D
,..D E
$num..E F
]..F G
)..G H
;..H I
Array00 
.00 
Resize00 
(00 
ref00  
cardBytesLow00! -
,00- .
$num00/ 0
)000 1
;001 2
Array11 
.11 
Resize11 
(11 
ref11  
cardBytesHigh11! .
,11. /
$num110 1
)111 2
;112 3
if33 
(33 
BitConverter33  
.33  !
IsLittleEndian33! /
)33/ 0
{44 
Array55 
.55 
Reverse55 !
(55! "
cardBytesLow55" .
)55. /
;55/ 0
Array66 
.66 
Reverse66 !
(66! "
cardBytesHigh66" /
)66/ 0
;660 1
}77 
int99 
index99 
=99 
(99 
i99 
*99  
$num99! "
)99" #
+99$ %
$num99& '
;99' (
msg;; 
[;; 
index;; 
];; 
=;; 
cardBytesLow;; )
[;;) *
$num;;* +
];;+ ,
;;;, -
msg<< 
[<< 
index<< 
+<< 
$num<< 
]<< 
=<<  
cardBytesLow<<! -
[<<- .
$num<<. /
]<</ 0
;<<0 1
msg>> 
[>> 
index>> 
+>> 
$num>> 
]>> 
=>>  
cardBytesHigh>>! .
[>>. /
$num>>/ 0
]>>0 1
;>>1 2
msg?? 
[?? 
index?? 
+?? 
$num?? 
]?? 
=??  
cardBytesHigh??! .
[??. /
$num??/ 0
]??0 1
;??1 2
}@@ 
msgBB 
[BB 
msgBB 
.BB 
LengthBB 
-BB 
$numBB 
]BB 
=BB  !
ConvertBB" )
.BB) *
ToByteBB* 0
(BB0 1
cardsBB1 6
.BB6 7
LengthBB7 =
/BB> ?
$numBB@ A
)BBA B
;BBB C
byteDD 
[DD 
]DD 
	XORandSUMDD 
=DD 
baseDD #
.DD# $
CalculateXORandSUMDD$ 6
(DD6 7
msgDD7 :
)DD: ;
;DD; <
msgFF 
[FF 
msgFF 
.FF 
LengthFF 
-FF 
$numFF 
]FF 
=FF  !
	XORandSUMFF" +
[FF+ ,
$numFF, -
]FF- .
;FF. /
msgGG 
[GG 
msgGG 
.GG 
LengthGG 
-GG 
$numGG 
]GG 
=GG  !
	XORandSUMGG" +
[GG+ ,
$numGG, -
]GG- .
;GG. /
byteII 
[II 
]II 
responseII 
=II 
awaitII #
baseII$ (
.II( )
_asyncClientII) 5
.II5 6
StartClientII6 A
(IIA B
baseIIB F
.IIF G
_controllerAddressIIG Y
.IIY Z
	IpAddressIIZ c
,IIc d
baseIIe i
.IIi j
_controllerAddressIIj |
.II| }
Port	II} 
,
II 
msg
II 
)
II 
.
II 
ConfigureAwait
II 
(
II 
false
II 
)
II 
;
II 
ifKK 
(KK 
!KK 
IsValidResponseKK 
(KK  
responseKK  (
)KK( )
)KK) *
{LL 
throwMM 
newMM 
	ExceptionMM #
(MM# $
$strMM$ K
)MMK L
;MML M
}NN 
StringBuilderQQ 
sbQQ 
=QQ 
newQQ "
StringBuilderQQ# 0
(QQ0 1
)QQ1 2
;QQ2 3
forRR 
(RR 
intRR 
iRR 
=RR 
$numRR 
;RR 
iRR 
<RR 
responseRR  (
.RR( )
LengthRR) /
;RR/ 0
iRR1 2
++RR2 4
)RR4 5
{SS 
sbTT 
.TT 

AppendLineTT 
(TT 
stringTT $
.TT$ %
FormatTT% +
(TT+ ,
$strUU 9
,UU9 :
(VV 
iVV 
.VV 
ToStringVV 
(VV  
)VV  !
.VV! "
LengthVV" (
>VV) *
$numVV+ ,
)VV, -
?VV. /
iVV0 1
.VV1 2
ToStringVV2 :
(VV: ;
)VV; <
:VV= >
$strVV? B
+VVC D
iVVE F
.VVF G
ToStringVVG O
(VVO P
)VVP Q
,VVQ R
responseWW 
[WW 
iWW 
]WW 
.WW  
ToStringWW  (
(WW( )
$strWW) -
)WW- .
,WW. /
ConvertXX 
.XX 
ToInt32XX #
(XX# $
responseXX$ ,
[XX, -
iXX- .
]XX. /
)XX/ 0
)YY 
)YY 
;YY 
}ZZ 
return\\ 
sb\\ 
.\\ 
ToString\\ 
(\\ 
)\\  
;\\  !
}]] 	
}^^ 
}__ 